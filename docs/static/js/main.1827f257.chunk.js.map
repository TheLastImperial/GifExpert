{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","components/Gif.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","Gif","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"uNAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAc9C,OACI,sBAAMC,SATY,SAAEC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAjBU,SAACP,GACnBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAWZM,GAXY,4CAAH,sDCEPO,EAAM,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACzB,OACI,sBAAKc,UAAU,yDAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,WC0BGO,EAzBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECJN,SAACA,GAAa,IAAD,EACXd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHwB,mBAC9BC,EAD8B,KACvBC,EADuB,KAerC,OAVAC,qBAAU,WACNxB,EAAQC,GACPwB,MAAK,SAACC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGlB,CAACpB,IAEGqB,EDV0BK,CAAc1B,GAAlCa,EADiB,EACtBN,KAAaa,EADS,EACTA,QAErB,OACI,qCACI,mCAAOpB,EAAP,OACEoB,GAAW,cAEb,qBAAKJ,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAESA,GADCA,EAAIC,aEfzBgB,EAAe,WAAO,IAAD,EACMzC,mBAAS,CAAE,cADjB,mBACvB0C,EADuB,KACX3C,EADW,KAI9B,OACI,qCACI,8CAGA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBACA,6BAEQ2C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAASA,SAAaA,aCX9C6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1827f257.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\n\nexport const AddCategory = ({ setCategories }) => {\n    const [inputValue, setInputValue] = useState('');\n    const onChangeValue = (e) => {\n        setInputValue(e.target.value);\n    };\n    \n    const handledSubmit = ( e ) => {\n        e.preventDefault();\n        if( inputValue.trim().length > 2 ){\n            setCategories( cats => [inputValue, ...cats]);\n            setInputValue('');\n        }\n    };\n\n    return (\n        <form onSubmit = { handledSubmit }>\n            <input\n                type='text'\n                value={ inputValue }\n                onChange = { onChangeValue }\n            />\n        </form>\n    );\n};\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","export const getGifs = async ( category ) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=Vxdmw9dR5IeMME4ug2ZMTqfZa5h1nl4a`\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    const gifs = data.map(img =>{ \n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    });\n    return gifs;\n}\n","import React from 'react'\n\nexport const Gif = ({ title, url}) => {\n    return (\n        <div className='card animate__animated animate__bounce animate__faster'>\n            <img src={ url } alt={ title } />\n            <p> { title } </p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n// import { getGifs } from '../helpers/GetGifs';\nimport { Gif } from './Gif';\n\n// import PropTypes from 'prop-types'\n\nconst GifGrid = ({ category }) => {\n    const { data:images, loading } = useFetchGifs( category );\n\n    return (\n        <>\n            <h3> { category } </h3>\n            { loading && 'Cargando...' }\n\n            <div className='card-grid'>\n                {\n                    images.map((img) =>(\n                        <Gif\n                            key={ img.id}\n                            { ...img }\n                        />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n\n// GifGrid.propTypes = {\n// }\n\nexport default GifGrid\n","import { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/GetGifs';\n\nexport const useFetchGifs = (category) =>{\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n    useEffect(() => {\n        getGifs(category)\n        .then((imgs)=>{\n            setState({\n                data: imgs,\n                loading: false\n            })\n        });\n    }, [category]);\n\n    return state;\n};","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n    const [categories, setCategories] = useState([ 'One Punch' ]);\n\n\n    return (\n        <>\n            <h2>\n                GifExpertApp\n            </h2>\n            <AddCategory setCategories = { setCategories }/>\n            <hr/>\n            <ol>\n                {\n                    categories.map(category =>\n                        <GifGrid category = { category }/>\n                    )\n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'animate.css';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}